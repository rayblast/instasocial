/*
 * File: app/view/NewsFeedfbList.js
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('InstaSocial.view.NewsFeedfbList', {
    extend: 'Ext.dataview.List',
    alias: 'widget.newsFeedfbList',

    config: {
        cls: 'newsfeed-list',
        id: 'newsFeedfbList',
        showAnimation: 'slide',
        disableSelection: true,
        deferEmptyText: false,
        store: 'NewsFeedfbStore',
        variableHeights: true,
        scrollable: {
            direction: 'vertical',
            directionLock: true
        },
        itemTpl: Ext.create('Ext.XTemplate', 
            '<div class="newsfeed-list-item">',
            '	<div class="header">',
            '        <div class="icon">',
            '            <img src="{User.photo}"/>',
            '    	</div>',
            '        <div class="info">',
            '        	<div class="name">',
            '        		{User.full_name}',
            '    		</div>',
            '            <div class="date">',
            '        		{created_time}',
            '    		</div>',
            '        </div>',
            '    </div>',
            '    <div class="body">',
            '        <div class="text">',
            '            {text}',
            '        </div>',
            '        {[core.renderer.attachments(values.attachments)]}',
            '    </div>',
            '    <div class="footer">',
            '        {likes_count} {[this.lblLikes()]} {comments_count} {[this.lblComments()]}',
            '    </div>  ',
            '</div>',
            {
                lblComments: function() {
                    return labels.lblComments;
                },
                lblLikes: function() {
                    return labels.lblLikes;
                },
                disableFormats: true
            }
        )
    },

    initialize: function() {
        this.callParent();
        this.setEmptyText(labels.lblNoData);
        this.refresh();
    }

});