/*
 * File: app/view/NewsFeedanList.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('InstaSocial.view.NewsFeedanList', {
    extend: 'Ext.dataview.List',
    alias: 'widget.newsFeedanList',

    config: {
        locked: false,
        cls: 'newsfeed-list',
        id: 'newsFeedanList',
        itemId: 'newsFeedanList',
        showAnimation: 'slide',
        disableSelection: true,
        deferEmptyText: false,
        scrollToTopOnRefresh: false,
        store: 'NewsFeedanStore',
        variableHeights: true,
        scrollable: {
            direction: 'vertical',
            directionLock: true
        },
        itemTpl: Ext.create('Ext.XTemplate', 
            '<div class="newsfeed-list-item">',
            '	<div class="header">',
            '        <div class="network_logo">',
            '            <img class="network_logo_img" src="resources/img/network-{network_id}.png"/>',
            '    	</div>',
            '        <div class="icon">',
            '            <img src="{User.photo}"/>',
            '    	</div>',
            '        <div class="info">',
            '        	<div class="name">',
            '        		{User.full_name}',
            '    		</div>',
            '            {[core.renderer.repost(values.ParentUser, values.parent_created_time)]}',
            '        </div>',
            '    </div>',
            '    <div class="body">',
            '        <div class="text">',
            '            {text}',
            '        </div>',
            '        {[core.renderer.attachments(values.attachments)]}',
            '    </div>',
            '    <div class="footer">',
            '        <div class="date">',
            '            {[core.helper.getDateTimeFromUnix(values.created_time)]}',
            '        </div>',
            '        <div class="comments">',
            '            <div class="comments_img">',
            '            </div>',
            '            <div class="comments_count">',
            '                {comments_count}',
            '            </div>',
            '        </div>',
            '        <div class="likes">',
            '            <div class="likes_img">',
            '            </div>',
            '            <div class="likes_count">',
            '                {likes_count}',
            '            </div>',
            '        </div>',
            '    </div>',
            '</div>',
            '',
            {
                disableFormats: true
            }
        )
    },

    initialize: function() {
        this.callParent();
        this.setEmptyText(labels.lblNoData);
        this.refresh();

        var scroller = this.getScrollable().getScroller();
        scroller.on({
            scroll: function(scroller, x, y){
                if (!this.config.locked && y >= scroller.maxPosition.y - config.core.ui.newsFeedanUpdateOffset) {
                    this.config.locked = true;
                    core.newsfeed.networks.an.getNewsFeed(null, null, null, true);
                }
            },
            maxpositionchange: function(scroller, maxPosition, eOpts){
                this.config.locked = false;
            },
            scope: this
        });

    }

});